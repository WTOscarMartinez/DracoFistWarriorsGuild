@page
@model DracoFistWarriorsGuild.Pages_Quests.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Quests</h1>

<p>
    <a asp-page="Create" class="btn btn-secondary">New Quest</a>
</p>
<div class="row">
    <form class="d-flex" role="search" asp-page="./Index" method="get">
        <div class="col-3">
            <div class="input-group">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
                <input class="form-control me-2" type="search" name="CurrentSearch" value="@Model.CurrentSearch" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </div>
        </div>
    </form>
</div>
<table class="table" style="width:100%">
    <thead>
        <tr>
            <th style="width:20%">
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quest[0].Type)
            </th>
            <th>
                @{
                    var nameSort = "des_asc";
                    if (Model.CurrentSort == "des_asc")
                    {
                        nameSort = "des_desc";
                    }
                }
                <a asp-page="./Index" asp-route-CurrentSort="@nameSort" asp-route-PageNum="@Model.PageNum">@Html.DisplayNameFor(model => model.Quest[0].Description)</a>
                
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quest[0].Reward)
            </th>
            <th style="width:10%">
            </th>
            <th>
                @{
                    var dateSort = "date_asc";
                    if (Model.CurrentSort == "date_asc")
                    {
                        dateSort = "date_desc";
                    }
                }
                <a asp-page="./Index" asp-route-CurrentSort="@dateSort" asp-route-PageNum="@Model.PageNum">@Html.DisplayNameFor(model => model.Quest[0].PostedDate)</a>
            </th>
            <th>
                @{
                    var statusSort = "status_asc";
                    if (Model.CurrentSort == "status_asc")
                    {
                        statusSort = "status_desc";
                    }
                }
                <a asp-page="./Index" asp-route-CurrentSort="@statusSort" asp-route-PageNum="@Model.PageNum">@Html.DisplayNameFor(model => model.Quest[0].Status)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quest[0].CompletedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quest[0].CompletedOn)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Quest) {
        <tr>
            <td>
                <img src="@Html.DisplayFor(modelItem => item.ImgUrl)" alt="" class="img-fluid"></img>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reward)
            </td>
            <td>
                <img src="@Html.DisplayFor(modelItem => item.RewardImgURL)" alt="" class="img-fluid"></img>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompletedBy)
            </td>
            <td>
                @{
                    if(item.CompletedOn != default){
                        @Html.DisplayFor(modelItem => item.CompletedOn)
                    }
                }
            </td>
            <td>
                <a asp-page="./Edit" class="text-center" asp-route-id="@item.QuestID">Edit</a>
                <a asp-page="./Details" class="text-center" asp-route-id="@item.QuestID">Details</a>
                <a asp-page="./Delete" class="text-center" asp-route-id="@item.QuestID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<hr />
@{
    // If we are on page 1, prevDisabled will be set to the "disabled" class
    // otherwise, it will be empty. So our previous button will be enabled or disabled based on this logic
    var prevDisabled = "";
    var nextDisabled = "";
    if (Model.PageNum <= 1)
    {
        prevDisabled = "disabled";
    }
    if (Model.PageNum >= Model.TotalPages)
    {
        nextDisabled = "disabled";
    }
}
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @prevDisabled"><a class="page-link" asp-page="./Index" asp-route-CurrentSort="@Model.CurrentSort" asp-route-PageNum="@(Model.PageNum - 1)">Previous</a></li>
        <li class="page-item @nextDisabled"><a class="page-link" asp-page="./Index" asp-route-CurrentSort="@Model.CurrentSort" asp-route-PageNum="@(Model.PageNum + 1)">Next</a></li>
    </ul>
</nav>