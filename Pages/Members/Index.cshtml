@page
@model DracoFistWarriorsGuild.Pages_Members.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Members</h1>

<p>
    <a asp-page="Create" class="btn btn-secondary">New Member</a>
</p>

<div class="row">
    <form class="d-flex" role="search" asp-page="./Index" method="get">
        <div class="col-3">
            <div class="input-group">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
                <input class="form-control me-2" type="search" name="CurrentSearch" value="@Model.CurrentSearch" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </div>
        </div>
    </form>
</div>

<div class="container mt-4">
    <div class="row">
        @foreach (var item in Model.Member)
        {
            <div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-4">
                <a asp-page="./Details" style="color: black;" class="text-decoration-none" asp-route-id="@item.MemberID">
                    <div class="card shadow-sm hover-card" style="width: 18rem;">
                        <img src="@item.ImgUrl" alt="Member Image" class="img-fluid card-img" />
                        <div class="card-body">
                            <h5 class="card-title">@item.Name</h5>
                        </div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                @Html.DisplayNameFor(model => model.Member[0].Class): @item.Class
                            </li>
                            <li class="list-group-item">
                                @Html.DisplayNameFor(model => model.Member[0].Race): @item.Race
                            </li>
                            <li class="list-group-item">
                                @Html.DisplayNameFor(model => model.Member[0].Gender): @item.Gender
                            </li>
                        </ul>
                        <div class="card-body">
                            <a asp-page="./Edit" asp-route-id="@item.MemberID">Edit</a> |
                            <a asp-page="./Delete" asp-route-id="@item.MemberID">Delete</a>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
</div>

<hr />
@{
    // If we are on page 1, prevDisabled will be set to the "disabled" class
    // otherwise, it will be empty. So our previous button will be enabled or disabled based on this logic
    var prevDisabled = "";
    var nextDisabled = "";
    if (Model.PageNum <= 1)
    {
        prevDisabled = "disabled";
    }
    if (Model.PageNum >= Model.TotalPages)
    {
        nextDisabled = "disabled";
    }
}
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @prevDisabled"><a class="page-link" asp-page="./Index" asp-route-CurrentSort="@Model.CurrentSort" asp-route-PageNum="@(Model.PageNum - 1)">Previous</a></li>
        <li class="page-item @nextDisabled"><a class="page-link" asp-page="./Index" asp-route-CurrentSort="@Model.CurrentSort" asp-route-PageNum="@(Model.PageNum + 1)">Next</a></li>
    </ul>
</nav>